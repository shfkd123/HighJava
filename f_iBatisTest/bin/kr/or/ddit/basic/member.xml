<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="memberTest">
<!-- 쿼리작성
	이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 있는 기본적인 태그들
	<select> ~ </select>
	<insert> ~ </insert>
	<update> ~ </update>
	<delete> ~ </delete>
	
	위 태그에서 사용되는 속성들
	1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름
	2) parameterClass속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다.
	(보통 VO클래스, 자바의  자료형이름 등이 사용된다.)
	(typeAlias로 지정한 alias명을 사용할 수 있다.)
	
	3) resultClass 속성 : select문을 실행한 결과를 담을 객체를 지정한다.
						(보통  VO클래스나 자바의 자료형 이름을 사용한다.)

 -->

	<insert id="insertMember"
		parameterClass="kr.or.ddit.member.vo.MemberVO"><!-- ibatis에게 알려줌 -->

		insert into mymember
		(mem_id,mem_name,mem_tel,mem_addr)
		values(#memId#,#memName#,#memTel#,#memAddr#) <!-- JDBC에서는 ?를 사용해서  pstmt에게 알려줬지만 ibatis는 ## --> 

	</insert>


	<update id="updateMember"
		parameterClass="kr.or.ddit.member.vo.MemberVO">

		update mymember
		set mem_name = #memName#
		,mem_tel = #memTel#
		,mem_addr = #memAddr#
		where mem_id = #memId#

	</update>



	<delete id="deleteMember" parameterClass="String"><!-- parameterClass에게 멤버아이디의 타입을 알려줌! -->

		delete from mymember where mem_id = #aaa# <!-- 객체일때만 맞춰주고 스트링은 그냥 아무거나 하면 된다 -->
													<!-- aaa는 임의로 넣어준것! iBatis가 알아서 찾아줌. -->

	</delete>


	<resultMap class="kr.or.ddit.member.vo.MemberVO" id="memMap">

		<result property="memId" column="mem_id" />
		<result property="memName" column="mem_name" />
		<result property="memTel" column="mem_tel" />
		<result property="memAddr" column="mem_addr" />

	</resultMap>

	<!-- <select id="getMemberAll" resultClass="kr.or.ddit.member.vo.MemberVO"> -->
	<!-- 결과를 받아야 하므로 resultClass에다가 주소를 넣어준다 -->
	<select id="getMemberAll" resultMap="memMap">
		select * from mymember
		<!-- 일일이 alias를 넣어주기 힘들어서 resultMap정해준다 -->
	</select>

	<select id="getMember" parameterClass="String"
		resultMap="memMap">

		select * from mymember where mem_id = #memId#

	</select>

</sqlMap>			

